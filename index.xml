<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Etienne Caron</title>
    <link>https://kanawish.com/</link>
    <description>Recent content on Etienne Caron</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 May 2019 15:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kanawish.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DIY Reactive Model Store using RxJava</title>
      <link>https://kanawish.com/posts/001-rxjava-modelstore/</link>
      <pubDate>Sun, 05 May 2019 15:00:00 +0000</pubDate>
      
      <guid>https://kanawish.com/posts/001-rxjava-modelstore/</guid>
      <description>In the last few years on Android, we&amp;rsquo;ve seen an explosion of architectures based on the idea of a unidirectional data flow.
I was first exposed to this idea while working on an MVI-based app using RxJava. One of the key concepts in MVI is to cleanly manage changes to your application state. The Model Store pattern is key in achieving this.
Working with Immutable State So, what does a Model Store do, exactly?</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://kanawish.com/about/</link>
      <pubDate>Thu, 25 Apr 2019 08:00:00 +0000</pubDate>
      
      <guid>https://kanawish.com/about/</guid>
      <description>This is my personal blog. Opinions and content are my own.
Bio Etienne Caron is a tech lead at Shopify, a popular Canadian e-commerce company. He is also part of Google&amp;rsquo;s Developer Expert program, and an instructor for Caster.io
Etienne has been an active member of the Android developer community in Montreal since 2010, and regularly devotes his time to mentoring startups, developers and students in the mobile space.</description>
    </item>
    
  </channel>
</rss>